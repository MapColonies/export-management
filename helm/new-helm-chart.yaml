global:
  cloudProvider: {}
  tracing: {}
  metrics: {}
  environment: {}

enabled: true
environment: development
replicaCount: 1
initialDelaySeconds: 60
nodePort: 30030 #for minikube deployment only
resetOnConfigChange: true
imagePullPolicy: Always

cloudProvider:
  dockerRegistryUrl: acrarolibotnonprod.azurecr.io
  imagePullSecretName: 'acr-registry'
  flavor: openshift

caSecretName: ''
caPath: '/usr/local/share/ca-certificates'
caKey: 'ca.crt'

image:
  repository: export-management
  tag: 'v1.4.0'

serviceUrls:
  exporterTrigger: "http://raster-exporter-trigger-int-service"
  jobManager: "http://common-job-manager-integration-service"
jobManagement:
    exporter:
      jobType: rasterTilesExporter

env:
  port: 8080
  internalPort: 80
  targetPort: 8080
  protocol: TCP
  logLevel: info
  logPrettyPrintEnabled: false
  responseCompressionEnabled: true
  disableHttpClientLogs: false
  requestPayloadLimit: 1mb
  serviceWebhookEndpoint: https://export-management-test-integration.apps.j1lk3njp.eastus.aroapp.io/export-tasks/webhook/
  tracing:
    enabled: false
    url: http://localhost:55681/v1/trace
  metrics:
    enabled: false
    url: http://localhost:55681/v1/metrics
  httpRetry:
    attempts: 5
    delay: exponential
    shouldResetTimeout: true

resources:
  enabled: true
  value:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi

nginx:
  enabled: true
  replicaCount: 2
  image:
    repository: nginx-otel-unprivileged
    tag: 'v1.0.0' 
  port: 8080
  internalServicePort: 80
  targetPort: 8080
  servicePort: 8080
  nodePort: 30001
  authorization:
    enabled: true
    domain: 'rasterExport'
    url: http://opa-la-opa-service/v1/data/http/authz/decision

  extraVolumes:
    - name: nginx-config
      configMap:
        name: '{{ .Release.Name }}-nginx-configmap' 

  extraVolumeMounts: 
    - name: nginx-config
      mountPath: "/etc/nginx/conf.d/default.conf"
      subPath: default.conf
    - mountPath: "/etc/nginx/nginx.conf"
      name: nginx-config
      subPath: nginx.conf
  route:
    enabled: true
    path: /
    host: 
    timeout:
      enabled: false # defaults to 30s by openshift
      duration: 60s # supported units (us, ms, s, m, h, d)
    tls:
      enabled: true
      useCerts: false
      certificate: ''
      key: ''
      caCertificate: ''
  ingress:
    enabled: false
    path: /
    host: 'localhost'
    tls: 
      enabled: true
      secretName: ''                       
