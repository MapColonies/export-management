global:
  cloudProvider: {}
  tracing: {}
  metrics: {}
  environment: ''

enabled: true
environment: development
replicaCount: 1
initialDelaySeconds: 60
nodePort: 30030 #for minikube deployment only
resetOnConfigChange: true
imagePullPolicy: Always

cloudProvider:
  dockerRegistryUrl: my-registry-url.io
  imagePullSecretName: 'my-registry-secret'
  flavor: openshift

caSecretName: ''
caPath: '/usr/local/share/ca-certificates'
caKey: 'ca.crt'

image:
  repository: export-management
  tag: 'latest'

env:
  port: 8080
  internalPort: 80
  targetPort: 8080
  protocol: TCP
  logLevel: info
  logPrettyPrintEnabled: false
  responseCompressionEnabled: true
  disableHttpClientLogs: false
  requestPayloadLimit: 1mb
  tracing:
    enabled: false
    url: http://localhost:55681/v1/trace
  metrics:
    enabled: false
    url: http://localhost:55681/v1/metrics
  httpRetry:
    attempts: 5
    delay: exponential
    shouldResetTimeout: true
  maxTasksNumber: 10

db:
  host: localhost
  username: postgres
  password: postgres
  database: libot
  schema: export_manager
  port: 5432
  externalSecretName: ''
  useExternalSecret: false  
  sslAuth:
    enabled: false
    certFileName: postgresql.crt
    keyFileName: postgresql.key
    caFileName: root.crt

nginx:
  fullnameOverride: ""

  caSecretName: ''
  caPath: '/usr/local/share/ca-certificates'
  caKey: 'ca.crt'

  image:
    repository: nginx
    tag: 'latest' 
  port: 8080
  internalServicePort: 80
  targetPort: 8080
  siteStatusPort: 8081
  nodePort: 30001
  resources:
    enabled: true
    value:
      limits:
        cpu: 100m
        memory: 128Mi
      requests:
        cpu: 100m
        memory: 128Mi

  env:
    opentelemetry:
      serviceName: nginx
      exporterEndpoint: localhost:4317
      samplerMethod: "AlwaysOff" # AlwaysOn, AlwaysOff, TraceIdRatioBased
      ratio: 0.1 # between 0 and 1
      parentBased: "false" # true, false

  prometheusExporter:
    enabled: false
    image:
      repository: nginx/nginx-prometheus-exporter
      tag: latest
      pullPolicy: IfNotPresent
    resources:
      enabled: true
      value:
        limits:
          cpu: 100m
          memory: 128Mi
        requests:
          cpu: 100m
          memory: 128Mi  

  authorization:
    enabled: true
    domain: 'export'
    url: 'http://localhost:8181/v1/data/http/authz/decision'

  route:
    enabled: true
    path: /
    host: 
    timeout:
      enabled: false # defaults to 30s by openshift
      duration: 60s # supported units (us, ms, s, m, h, d)
    rewriteTarget: ''
    tls:
      enabled: true
      termination: edge
      insecureEdgeTerminationPolicy: Redirect
      useCerts: false
      certificate: ''
      key: ''
      caCertificate: ''

  ingress:
    enabled: false
    path: /
    host: 'localhost'
    tls: 
      enabled: true
      secretName: ''

resources:
  enabled: true
  value:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 25m
      memory: 128Mi
