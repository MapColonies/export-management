openapi: 3.0.1
info:
  title: MapColonies Export Service
  description: Export Service for DEM, Raster, 3D
  version: 1.2.0
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
paths:
  /export-tasks:
    post:
      operationId: createTask
      summary: Create an export task
      tags:
        - Tasks
      requestBody:
        description: task details
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTaskRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '509':
          description: Insufficient Storage
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: getTasks
      summary: get tasks by limit
      tags:
        - Tasks
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: number
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TasksResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '509':
          description: Insufficient Storage
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /export-tasks/{id}:
    get:
      operationId: getTaskById
      summary: get task by id
      tags:
        - Tasks
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: number
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '509':
          description: Insufficient Storage
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    CreateTaskRequest:
      type: object
      required:
        - ROI
        - catalogRecordID
        - domain
        - artifactCRS
        - webhooks
      properties:
        catalogRecordID:
          type: string
          format: uuid
        domain:
          type: string
          enum:
            - DEM
            - 3D
            - RASTER
          example: RASTER
        ROI:
          $ref: '#/components/schemas/FeatureCollection'
        artifactCRS:
          type: string
          enum:
            - '4326'
          example: '4326'
        description:
          type: string
          nullable: true
          example: export description example
        keywords:
          type: object
          nullable: true
          description: task metadata in key-value pair
          example:
            foo: kuku
        parameters:
          type: object
          description: task parameters in key-value pair
          example:
            foo: kuku
        webhooks:
          description: >-
            describe one or more relevant events to receive the data once event
            has been occurred
          type: array
          items:
            type: object
            required:
              - url
              - events
            properties:
              url:
                type: string
                example: https://webhook.com
              events:
                type: array
                minItems: 1
                uniqueItems: true
                items:
                  type: string
                  enum:
                    - TASK_COMPLETED
                    - TASK_FAILED
                  example: TASK_COMPLETED
      additionalProperties: false
    TaskResponse:
      type: object
      required:
        - id
        - status
        - createdAt
      properties:
        id:
          type: number
          format: int32
        catalogRecordID:
          type: string
          format: uuid
        domain:
          type: string
          enum:
            - DEM
            - 3D
            - RASTER
          example: RASTER
        ROI:
          $ref: '#/components/schemas/FeatureCollection'
        artifactCRS:
          type: string
          enum:
            - '4326'
          example: '4326'
        description:
          type: string
          nullable: true
          example: export description example
        keywords:
          type: object
          nullable: true
          description: task metadata in key-value pair
          example:
            foo: kuku
        parameters:
          type: object
          description: task parameters in key-value pair
          example:
            foo: kuku
        webhooks:
          description: >-
            describe one or more relevant events to receive the data once event
            has been occurred
          type: array
          items:
            type: object
            required:
              - events
              - url
            properties:
              events:
                type: array
                uniqueItems: true
                minItems: 1
                items:
                  type: string
                  enum:
                    - TASK_COMPLETED
                    - TASK_FAILED
                  example: TASK_COMPLETED
              url:
                type: string
                example: https://webhook.com
        estimatedSize:
          type: number
          format: int64
          description: the estimated size of the artifacts in bytes
        estimatedTime:
          type: number
          format: int64
          description: the estimated time of the export task
        status:
          type: string
          enum:
            - IN_PROGRESS
            - COMPLETED
            - ABORTED
            - PAUSED
            - FAILED
            - PENDING
            - EXPIRED
            - ARCHIVED
        errorReason:
          type: string
          nullable: true
        progress:
          type: number
          minimum: 0
          maximum: 100
        artifacts:
          type: array
          items:
            $ref: '#/components/schemas/Artifact'
        createdAt:
          type: string
          format: date-time
          description: creation task time - UTC format
        expiredAt:
          type: string
          nullable: true
          format: date-time
          description: when the task will be expired at - UTC format
        finishedAt:
          type: string
          nullable: true
          format: date-time
          description: when the task reached an end state - UTC format
    TasksResponse:
      type: array
      items:
        $ref: '#/components/schemas/TaskResponse'
    Artifact:
      type: object
      description: GeoJson Feature Collection
      required:
        - name
        - type
      properties:
        type:
          anyOf:
            - $ref: '#/components/schemas/ArtifactRasterType'
            - $ref: '#/components/schemas/Artifact3DType'
            - $ref: '#/components/schemas/ArtifactDEMType'
        name:
          type: string
        size:
          type: number
          format: int64
          example: 124215121
          description: size of the artifacts in bytes
        url:
          type: string
          format: uri
          example: https://download.com/file
    Artifact3DType:
      type: string
      enum:
        - 3D_MODEL
        - METADATA
        - THUMBNAILS_SMALL
        - THUMBNAILS_MEDIUM
        - THUMBNAILS_LARGE
    ArtifactRasterType:
      type: string
      enum:
        - GPKG
        - LEGEND
        - METADATA
        - THUMBNAILS_SMALL
        - THUMBNAILS_MEDIUM
        - THUMBNAILS_LARGE
    ArtifactDEMType:
      type: string
      enum:
        - MODEL
        - METADATA
        - ROI
        - LEGEND
    FeatureCollection:
      type: object
      description: GeoJson Feature Collection
      required:
        - type
        - features
      properties:
        type:
          type: string
          enum:
            - FeatureCollection
        features:
          type: array
          items:
            $ref: '#/components/schemas/Feature'
    Feature:
      required:
        - type
        - properties
        - geometry
      type: object
      description: GeoJson Feature
      properties:
        type:
          type: string
          enum:
            - Feature
        properties:
          $ref: '#/components/schemas/FeatureProperties'
        geometry:
          $ref: '#/components/schemas/Geometry'
    FeatureProperties:
      type: object
      description: define any additional properties fields for the feature
      example:
        maxResolutionDeg: 0.703125
    Geometry:
      type: object
      nullable: true
      description: GeoJSon geometry
      oneOf:
        - $ref: '#/components/schemas/Polygon'
        - $ref: '#/components/schemas/MultiPolygon'
    Polygon:
      type: object
      description: GeoJSon geometry
      externalDocs:
        url: http://geojson.org/geojson-spec.html#id4
      allOf:
        - $ref: '#/components/schemas/GeometryBase'
        - properties:
            coordinates:
              type: array
              items:
                type: array
                items:
                  $ref: '#/components/schemas/Point2D'
              example:
                - - - -180
                    - -90
                  - - -180
                    - 90
                  - - 180
                    - 90
                  - - 180
                    - -190
                  - - -180
                    - -90
    MultiPolygon:
      type: object
      description: GeoJSon geometry
      externalDocs:
        url: http://geojson.org/geojson-spec.html#id6
      allOf:
        - $ref: '#/components/schemas/GeometryBase'
        - properties:
            coordinates:
              type: array
              items:
                type: array
                items:
                  type: array
                  items:
                    $ref: '#/components/schemas/Point2D'
    GeometryBase:
      type: object
      description: GeoJSon geometry
      required:
        - type
      externalDocs:
        url: http://geojson.org/geojson-spec.html#geometry-objects
      properties:
        type:
          type: string
          enum:
            - Polygon
            - MultiPolygon
          description: the geometry type
    Point2D:
      type: array
      maxItems: 2
      minItems: 2
      items:
        type: number
    Point:
      type: object
      description: GeoJSon geometry
      externalDocs:
        url: http://geojson.org/geojson-spec.html#id2
      allOf:
        - $ref: '#/components/schemas/GeometryBase'
        - properties:
            coordinates:
              $ref: '#/components/schemas/Point2D'
    Error:
      type: object
      required:
        - message
      properties:
        message:
          type: string
