openapi: 3.0.1
info:
  title: service-name
  description: basic template for map colonies service
  version: 1.0.0
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
security:
  - ApiKeyAuth: []

paths:
  /export-tasks:
    post:
      operationId: createTask
      summary: Create an export task
      security:
        - ApiKeyAuth: []
      tags:
        - Tasks
      requestBody:
        description: task details
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/taskCreate'
      responses:
        201:
          description: created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/taskCreate'
components:
  schemas:
    taskCreate:
      type: object
      required:
        - catalogRecordID
        - domain
        - artifactCRS
        - webhook
      properties:
        catalogRecordID:
          type: string
          format: uuid
        domain:
          type: string
          enum: ['Raster', '3D', 'DEM']
        ROI:
          $ref: '#/components/schemas/FeatureCollection'
        artifactCRS:
          type: string
        description:
          type: string
        parameters:
          type: object
        webhook:
          type: array
          items:
            type: object
            required:
              - events
              - url
            properties:
              events:
                type: array
                uniqueItems: true
                minItems: 1
                items:
                  type: string
                  enum: ['TASK_COMPLETED', 'TASK_FAILED', 'TASK_ABORTED', 'TASK_STARTED']
              url:
                type: string
                format: url
                example: 'https://webhook.com'

    FeatureCollection:
      type: object
      description: GeoJson Feature Collection
      required:
        - type
        - features
      properties:
        type:
          type: string
          enum: ['FeatureCollection']
        features:
          type: array
          items:
            $ref: '#/components/schemas/Feature'

    Feature:
      type: object
      description: GeoJson Feature
      required:
        - type
        - properties
        - geometry
      properties:
        type:
          type: string
          enum: ['Feature']
        properties:
          type: object
          required:
            - max

    BBox:
      type: array
      items:
        type: number
      minItems: 4
      maxItems: 4
      description: >-
        Bounding box corners (lower left, upper right)=[minx,miny,maxx,maxy] in
        crs units as array. If empty - original layer's bbox is taken.

    error:
      type: object
      required:
        - message
      properties:
        message:
          type: string

  securitySchemes:
    ApiKeyAuth:        # arbitrary name for the security scheme
      type: apiKey
      in: query      # can be "header", "query" or "cookie"
      name: token  # name of the header, query parameter or cookie
